// This file is generated by running the atlas_builder.
package game

/*
Note: This file assumes the existence of a type Rect that defines a rectangle in the same package, it can defined as:

	Rect :: rl.Rectangle

or if you don't use raylib:

	Rect :: struct {
		x, y, width, height: f32,
	}

or if you want to use integers (or any other numeric type):

	Rect :: struct {
		x, y, width, height: int,
	}

Just make sure you have something along those lines the same package as this file.
*/

TEXTURE_ATLAS_FILENAME :: "assets/atlas.png"
ATLAS_FONT_SIZE :: 32
LETTERS_IN_FONT :: "ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz1234567890?!&.,_:[]-+"

// A generated square in the atlas you can use with rl.SetShapesTexture to make
// raylib shapes such as rl.DrawRectangleRec() use the atlas.
SHAPES_TEXTURE_RECT :: Rect {206, 74, 10, 10}

Texture_Name :: enum {
	None,
	Cat_Run,
	Platform,
	Cat_Idle,
	Mc0,
	Mc1,
	Mc2,
	Mc3,
	Title,
}

Atlas_Texture :: struct {
	rect: Rect,
	// These offsets tell you how much space there is between the rect and the edge of the original document.
	// The atlas is tightly packed, so empty pixels are removed. This can be especially apparent in animations where
	// frames can have different offsets due to different amount of empty pixels around the frames.
	// In many cases you need to add {offset_left, offset_top} to your position. But if you are
	// flipping a texture, then you might need offset_bottom or offset_right.
	offset_top: f32,
	offset_right: f32,
	offset_bottom: f32,
	offset_left: f32,
	document_size: [2]f32,
	duration: f32,
}

atlas_textures: [Texture_Name]Atlas_Texture = {
	.None = {},
	.Cat_Run = { rect = {244, 79, 64, 16}, offset_top = 0, offset_right = 0, offset_bottom = 0, offset_left = 0, document_size = {64, 16}, duration = 0.000},
	.Platform = { rect = {0, 79, 96, 16}, offset_top = 0, offset_right = 0, offset_bottom = 0, offset_left = 0, document_size = {96, 16}, duration = 0.000},
	.Cat_Idle = { rect = {173, 74, 32, 16}, offset_top = 0, offset_right = 0, offset_bottom = 0, offset_left = 0, document_size = {32, 16}, duration = 0.000},
	.Mc0 = { rect = {69, 0, 22, 28}, offset_top = 3, offset_right = 7, offset_bottom = 1, offset_left = 3, document_size = {32, 32}, duration = 0.100},
	.Mc1 = { rect = {92, 0, 21, 28}, offset_top = 3, offset_right = 8, offset_bottom = 1, offset_left = 3, document_size = {32, 32}, duration = 0.100},
	.Mc2 = { rect = {275, 0, 21, 27}, offset_top = 4, offset_right = 8, offset_bottom = 1, offset_left = 3, document_size = {32, 32}, duration = 0.100},
	.Mc3 = { rect = {221, 54, 22, 25}, offset_top = 6, offset_right = 7, offset_bottom = 1, offset_left = 3, document_size = {32, 32}, duration = 0.100},
	.Title = { rect = {100, 55, 58, 18}, offset_top = 8, offset_right = 3, offset_bottom = 6, offset_left = 3, document_size = {64, 32}, duration = 0.100},
}

Animation_Name :: enum {
	None,
	Mc_Idle,
}

Tag_Loop_Dir :: enum {
	Forward,
	Reverse,
	Ping_Pong,
	Ping_Pong_Reverse,
}

// Any aseprite file with frames will create new animations. Also, any tags
// within the aseprite file will make that that into a separate animation.
Atlas_Animation :: struct {
	first_frame: Texture_Name,
	last_frame: Texture_Name,
	document_size: [2]f32,
	loop_direction: Tag_Loop_Dir,
	repeat: u16,
}

atlas_animations := [Animation_Name]Atlas_Animation {
	.None = {},
	.Mc_Idle = { first_frame = .Mc0, last_frame = .Mc3, loop_direction = .Forward, repeat = 0, document_size = {0, 0} },
}

Atlas_Glyph :: struct {
	rect: Rect,
	value: rune,
	offset_x: int,
	offset_y: int,
	advance_x: int,
}

atlas_glyphs: []Atlas_Glyph = {
	{ rect = {312, 29, 25, 24}, value = 'A', offset_x = -1, offset_y = 0, advance_x = 23},
	{ rect = {123, 30, 22, 24}, value = 'B', offset_x = 0, offset_y = 0, advance_x = 23},
	{ rect = {442, 1, 21, 25}, value = 'C', offset_x = 1, offset_y = 0, advance_x = 23},
	{ rect = {70, 30, 25, 24}, value = 'D', offset_x = 0, offset_y = 1, advance_x = 25},
	{ rect = {328, 55, 23, 23}, value = 'E', offset_x = 0, offset_y = 1, advance_x = 22},
	{ rect = {401, 55, 21, 23}, value = 'F', offset_x = 0, offset_y = 1, advance_x = 20},
	{ rect = {194, 1, 26, 26}, value = 'G', offset_x = 1, offset_y = 0, advance_x = 27},
	{ rect = {245, 55, 27, 23}, value = 'H', offset_x = 0, offset_y = 1, advance_x = 27},
	{ rect = {50, 34, 13, 23}, value = 'I', offset_x = 0, offset_y = 1, advance_x = 12},
	{ rect = {46, 1, 12, 31}, value = 'J', offset_x = 0, offset_y = 1, advance_x = 12},
	{ rect = {222, 1, 25, 26}, value = 'K', offset_x = 0, offset_y = 0, advance_x = 23},
	{ rect = {353, 55, 22, 23}, value = 'L', offset_x = 0, offset_y = 1, advance_x = 23},
	{ rect = {222, 29, 32, 24}, value = 'M', offset_x = 0, offset_y = 1, advance_x = 32},
	{ rect = {256, 29, 26, 24}, value = 'N', offset_x = 0, offset_y = 1, advance_x = 26},
	{ rect = {416, 1, 24, 25}, value = 'O', offset_x = 1, offset_y = 0, advance_x = 25},
	{ rect = {27, 34, 21, 24}, value = 'P', offset_x = 0, offset_y = 0, advance_x = 20},
	{ rect = {1, 1, 24, 32}, value = 'Q', offset_x = 1, offset_y = 0, advance_x = 26},
	{ rect = {249, 1, 25, 26}, value = 'R', offset_x = 0, offset_y = 0, advance_x = 23},
	{ rect = {460, 28, 16, 25}, value = 'S', offset_x = 2, offset_y = 0, advance_x = 20},
	{ rect = {97, 30, 24, 24}, value = 'T', offset_x = -1, offset_y = 0, advance_x = 22},
	{ rect = {284, 29, 26, 24}, value = 'U', offset_x = 0, offset_y = 1, advance_x = 25},
	{ rect = {359, 1, 27, 25}, value = 'V', offset_x = 0, offset_y = 1, advance_x = 26},
	{ rect = {154, 1, 38, 26}, value = 'W', offset_x = -1, offset_y = 0, advance_x = 35},
	{ rect = {274, 55, 25, 23}, value = 'X', offset_x = 0, offset_y = 1, advance_x = 24},
	{ rect = {301, 55, 25, 23}, value = 'Y', offset_x = 0, offset_y = 1, advance_x = 23},
	{ rect = {377, 55, 22, 23}, value = 'Z', offset_x = 0, offset_y = 1, advance_x = 22},
	{ rect = {43, 60, 16, 17}, value = 'a', offset_x = 1, offset_y = 8, advance_x = 16},
	{ rect = {115, 1, 19, 27}, value = 'b', offset_x = 0, offset_y = 0, advance_x = 19},
	{ rect = {1, 61, 15, 17}, value = 'c', offset_x = 1, offset_y = 8, advance_x = 16},
	{ rect = {298, 1, 19, 26}, value = 'd', offset_x = 1, offset_y = 0, advance_x = 19},
	{ rect = {101, 75, 15, 17}, value = 'e', offset_x = 1, offset_y = 8, advance_x = 16},
	{ rect = {188, 29, 12, 25}, value = 'f', offset_x = 0, offset_y = 0, advance_x = 11},
	{ rect = {27, 1, 17, 31}, value = 'g', offset_x = 0, offset_y = 1, advance_x = 16},
	{ rect = {465, 1, 20, 25}, value = 'h', offset_x = 0, offset_y = 0, advance_x = 19},
	{ rect = {439, 55, 10, 23}, value = 'i', offset_x = 0, offset_y = 1, advance_x = 9},
	{ rect = {60, 1, 8, 31}, value = 'j', offset_x = 0, offset_y = 1, advance_x = 9},
	{ rect = {487, 1, 20, 25}, value = 'k', offset_x = 0, offset_y = 0, advance_x = 18},
	{ rect = {202, 29, 10, 25}, value = 'l', offset_x = 0, offset_y = 0, advance_x = 9},
	{ rect = {160, 56, 29, 17}, value = 'm', offset_x = 0, offset_y = 7, advance_x = 28},
	{ rect = {191, 56, 20, 17}, value = 'n', offset_x = 0, offset_y = 7, advance_x = 19},
	{ rect = {24, 60, 17, 17}, value = 'o', offset_x = 1, offset_y = 8, advance_x = 18},
	{ rect = {359, 28, 19, 25}, value = 'p', offset_x = 0, offset_y = 7, advance_x = 19},
	{ rect = {380, 28, 19, 25}, value = 'q', offset_x = 1, offset_y = 7, advance_x = 19},
	{ rect = {118, 75, 14, 17}, value = 'r', offset_x = 0, offset_y = 7, advance_x = 13},
	{ rect = {86, 56, 13, 18}, value = 's', offset_x = 1, offset_y = 7, advance_x = 14},
	{ rect = {424, 55, 13, 23}, value = 't', offset_x = 0, offset_y = 2, advance_x = 12},
	{ rect = {65, 56, 19, 18}, value = 'u', offset_x = 0, offset_y = 7, advance_x = 19},
	{ rect = {482, 55, 21, 18}, value = 'v', offset_x = -2, offset_y = 8, advance_x = 16},
	{ rect = {451, 55, 29, 18}, value = 'w', offset_x = -2, offset_y = 8, advance_x = 25},
	{ rect = {134, 75, 19, 16}, value = 'x', offset_x = -1, offset_y = 8, advance_x = 17},
	{ rect = {1, 35, 21, 24}, value = 'y', offset_x = -2, offset_y = 8, advance_x = 16},
	{ rect = {155, 75, 17, 16}, value = 'z', offset_x = 0, offset_y = 8, advance_x = 16},
	{ rect = {496, 28, 14, 25}, value = '1', offset_x = 0, offset_y = 0, advance_x = 14},
	{ rect = {340, 1, 17, 26}, value = '2', offset_x = -1, offset_y = 0, advance_x = 16},
	{ rect = {422, 28, 17, 25}, value = '3', offset_x = 0, offset_y = 0, advance_x = 18},
	{ rect = {319, 1, 19, 26}, value = '4', offset_x = 0, offset_y = -1, advance_x = 18},
	{ rect = {136, 1, 16, 27}, value = '5', offset_x = 0, offset_y = -1, advance_x = 17},
	{ rect = {478, 28, 16, 25}, value = '6', offset_x = 1, offset_y = 0, advance_x = 17},
	{ rect = {339, 29, 16, 24}, value = '7', offset_x = 0, offset_y = 0, advance_x = 14},
	{ rect = {154, 29, 16, 25}, value = '8', offset_x = 1, offset_y = 0, advance_x = 17},
	{ rect = {441, 28, 17, 25}, value = '9', offset_x = 0, offset_y = 0, advance_x = 17},
	{ rect = {401, 28, 19, 25}, value = '0', offset_x = 1, offset_y = 0, advance_x = 20},
	{ rect = {172, 29, 14, 25}, value = '?', offset_x = 1, offset_y = 0, advance_x = 16},
	{ rect = {214, 29, 6, 25}, value = '!', offset_x = 2, offset_y = 0, advance_x = 9},
	{ rect = {388, 1, 26, 25}, value = '&', offset_x = 1, offset_y = 0, advance_x = 25},
	{ rect = {505, 74, 6, 7}, value = '.', offset_x = 2, offset_y = 18, advance_x = 9},
	{ rect = {213, 56, 6, 12}, value = ',', offset_x = 2, offset_y = 18, advance_x = 9},
	{ rect = {218, 70, 0, 0}, value = '_', offset_x = 0, offset_y = 24, advance_x = 9},
	{ rect = {505, 55, 6, 17}, value = ':', offset_x = 2, offset_y = 8, advance_x = 9},
	{ rect = {220, 70, 0, 0}, value = '[', offset_x = 0, offset_y = 24, advance_x = 9},
	{ rect = {218, 72, 0, 0}, value = ']', offset_x = 0, offset_y = 24, advance_x = 9},
	{ rect = {451, 75, 10, 3}, value = '-', offset_x = 1, offset_y = 14, advance_x = 12},
	{ rect = {220, 72, 0, 0}, value = '+', offset_x = 0, offset_y = 24, advance_x = 9},
}
